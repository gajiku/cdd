// Code generated by protoc-gen-cdd. DO NOT EDIT.
// source: users.proto

package tbl_users

import (
	"github.com/jinzhu/gorm"
	_ "github.com/jinzhu/gorm/dialects/mysql"
	"time"
)

type MysqlDatasource struct {
	db        *gorm.DB
	tableName string
}

func NewMysqlDatasource(db *gorm.DB) *MysqlDatasource {
	return &MysqlDatasource{db, "tbl_users"}
}

func (r *MysqlDatasource) GetByPrimaryKey(id int) (*UserModel, error) {
	result := &UserModel{}
	err := r.db.Table(r.tableName).Where("id = ?", id).Scan(&result).Error
	return result, err
}

func (r *MysqlDatasource) GetAll() ([]*UserModel, error) {
	result := []*UserModel{}
	err := r.db.Table(r.tableName).Find(&result).Error
	return result, err
}

func (r *MysqlDatasource) Create(in UserModel) (*UserModel, error) {
	timeNow := time.Now()
	in.CreatedAt = &timeNow
	in.UpdatedAt = &timeNow

	err := r.db.Table(r.tableName).Create(&in).Error
	if err != nil {
		return nil, err
	}
	return &in, nil
}

func (r *MysqlDatasource) Update(in UserModel) (*UserModel, error) {
	timeNow := time.Now()
	in.CreatedAt = nil
	in.UpdatedAt = &timeNow
	err := r.db.Table(r.tableName).Where("id = ?", in.Id).Updates(&in).Error
	if err != nil {
		return nil, err
	}
	return &in, nil
}

func (r *MysqlDatasource) Delete(id int) error {
	return r.db.Table(r.tableName).Delete(&UserModel{}, "id = ?", id).Error
}
